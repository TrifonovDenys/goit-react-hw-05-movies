{"version":3,"file":"static/js/912.e48f35e7.chunk.js","mappings":"8PACA,GAAgB,KAAO,+BAA+B,sBAAwB,gDAAgD,OAAS,iCAAiC,QAAU,kCAAkC,YAAc,sCAAsC,KAAO,+BAA+B,KAAO,+BAA+B,KAAO,+BAA+B,mBAAqB,6CAA6C,UAAY,qC,SCmExc,EA7DqB,WAAO,IAAD,IAElBA,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAYC,EAAAA,EAAAA,MACZC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,YAE5DC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOC,EAAAA,EAAAA,IAAmB,GAAD,OAAIb,IAF7B,OAEVc,EAFU,OAGhBV,EAAaU,GAHG,gDAKhBC,QAAQC,MAAM,iJAAd,MALgB,yDAAH,qDAQfJ,GACD,GAAC,CAACZ,IAEH,IAAQiB,EAAqEd,EAArEc,MAAOC,EAA8Df,EAA9De,aAAcC,EAAgDhB,EAAhDgB,YAAaC,EAAmCjB,EAAnCiB,OAAQC,EAA2BlB,EAA3BkB,SAAUC,EAAiBnB,EAAjBmB,aAE5D,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIhB,EAAoBiB,QAASC,UAAS,UAAKC,EAAAA,UAAL,YAAsBA,EAAAA,MAAtE,6BACA,iBAAKD,UAAWC,EAAAA,sBAAhB,WACE,gBAAKD,UAAWC,EAAAA,OAAhB,UACE,gBACEC,IAAMR,EA1BI,sCA0BsBA,GAAc,mCAC9CS,IAAKX,EACLY,QAAQ,OACRC,MAAO,SAEX,iBAAKL,UAAWC,EAAAA,QAAhB,WACE,gBAAID,UAAWC,EAAAA,YAAf,UAAiCT,EAChCC,GAAY,YAASA,EAAaa,MAAM,EAAG,GAA/B,SAEf,eAAGN,UAAWC,EAAAA,KAAd,yBAAqCM,KAAKC,MAAsB,GAAfX,GAAjD,QACA,eAAIG,UAAWC,EAAAA,KAAf,uBACA,cAAGD,UAAWC,EAAAA,KAAd,SAAyBL,KACzB,eAAII,UAAWC,EAAAA,KAAf,qBACA,eAAID,UAAS,UAAKC,EAAAA,YAAL,YAAwBA,EAAAA,MAArC,SACGN,GAAUA,EAAOc,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OAAgB,wBAAcA,GAALD,EAAzB,aAI1B,gBAAIV,UAAS,UAAKC,EAAAA,mBAAL,YAA+BA,EAAAA,MAA5C,WACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAOE,UAAWC,EAAAA,KAA3B,qBAEF,yBACE,SAAC,KAAD,CAAMH,GAAG,UAAUE,UAAWC,EAAAA,KAA9B,2BAGJ,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAKP,C","sources":["webpack://goit-react-hw-05-movies/./src/components/pages/styles/MovieDetailsPage.module.css?b5e1","components/pages/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsPage_link__rym5A\",\"movie_details_wrapper\":\"MovieDetailsPage_movie_details_wrapper__nnX42\",\"poster\":\"MovieDetailsPage_poster__EBwf8\",\"general\":\"MovieDetailsPage_general__7nHWi\",\"movie_title\":\"MovieDetailsPage_movie_title__tOUoJ\",\"info\":\"MovieDetailsPage_info__iDNDp\",\"text\":\"MovieDetailsPage_text__gUBfJ\",\"list\":\"MovieDetailsPage_list__oeB5d\",\"list_subcategories\":\"MovieDetailsPage_list_subcategories__YkZof\",\"link_back\":\"MovieDetailsPage_link_back__7Dpy6\"};","// import Cast from \"components/Cast/Cast\";\n// import Reviews from \"components/Reviews/Reviews\";\nimport {Suspense, useEffect, useRef, useState } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\"\nimport { theMovieDetailsAPI } from 'servises/api'\nimport css from './styles/MovieDetailsPage.module.css'\n\nconst MovieDetails = () => {\n  const urlOriginal = 'https://image.tmdb.org/t/p/original'\n  const {movieId} = useParams()\n  const [movieData, setMovieData] = useState([]);\n  const locations = useLocation()\n  const backLinkLocationRef = useRef(locations.state?.from ?? '/movies')\n\n  useEffect(() => {\n    const fetchData = async () => {\n    try {\n      const response = await theMovieDetailsAPI(`${movieId}`)\n      setMovieData(response);\n    } catch (error) {\n      console.error('Ошибка при загрузке данных:', error);\n    }\n  };\n    fetchData();\n  },[movieId])\n\n  const { title, release_date, poster_path, genres, overview, vote_average } = movieData \n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current} className={`${css.link_back} ${css.link}`}>&#8592; go Back</Link>\n      <div className={css.movie_details_wrapper}>\n        <div className={css.poster}>\n          <img\n            src={(poster_path ? urlOriginal+poster_path : <p>loading</p>)}\n            alt={title}\n            loading=\"lazy\"\n            width={600} />\n        </div>\n        <div className={css.general}>\n          <h1 className={css.movie_title}>{title}\n          {release_date && ` (${release_date.slice(0, 4)})`}\n        </h1>\n        <p className={css.text}>User Score: {Math.round((vote_average * 10))}%</p>\n        <h2 className={css.info}>Overview</h2>\n        <p className={css.text}>{overview}</p>\n        <h2 className={css.info}>Genres</h2>\n        <ul className={`${css.list_genres} ${css.list}`}>\n          {genres && genres.map(({id, name}) => <li key={id}>{name}</li>)}\n        </ul>\n        </div>\n      </div>\n      <ul className={`${css.list_subcategories} ${css.list}`}>\n        <li>\n          <Link to='cast' className={css.link}>cast</Link>\n        </li>\n        <li>\n          <Link to='reviews' className={css.link}>reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>loading...</div>}>\n        <Outlet/>\n      </Suspense>\n      \n    </>\n  )\n}\n\nexport default MovieDetails"],"names":["movieId","useParams","useState","movieData","setMovieData","locations","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchData","theMovieDetailsAPI","response","console","error","title","release_date","poster_path","genres","overview","vote_average","to","current","className","css","src","alt","loading","width","slice","Math","round","map","id","name","Suspense","fallback"],"sourceRoot":""}