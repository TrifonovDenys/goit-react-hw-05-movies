{"version":3,"file":"static/js/656.a5da4e64.chunk.js","mappings":"gRAmHA,EA9DmB,WAAO,IAAD,EACvB,GAAwCA,EAAAA,EAAAA,IAAgB,SAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAK,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,GAE3C,GAAsBJ,EAAAA,EAAAA,UAAS,IAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAkB,UAAD,OAAWR,IAFrC,OAERS,EAFQ,OAGdC,QAAQC,IAAIF,GACZN,EAAOM,GAJO,gDAmBdC,QAAQE,MAAM,iJAAd,MAnBc,yDAAH,qDAsBfL,GACD,GAAE,CAACP,IAMJ,OACE,iCAEE,kBACEa,UAAWC,EAAAA,EAAAA,MACXC,KAAK,OACLC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAOnB,EAAemB,EAAEC,OAAOH,MAA/B,EACVI,YAAY,kBAEd,mBAAQP,UAAWC,EAAAA,EAAAA,cAAmBO,QAdrB,WACnBzB,EAAgB,CAAEI,MAAOF,GAE1B,EAWG,qBAEA,eAAIe,UAAWC,EAAAA,EAAAA,KAAf,SACGZ,EAAIoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAAmB,eAAaX,UAAWC,EAAAA,EAAAA,KAAxB,UAC1B,SAAC,KAAD,CAAMD,UAAWC,EAAAA,EAAAA,KAAUW,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMvB,GAAvD,SACGoB,KAFgCD,EAA5B,QAQhB,C,oBChHD,KAAgB,MAAQ,wBAAwB,cAAgB,gCAAgC,MAAQ,wBAAwB,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uB","sources":["components/pages/MoviesPage.jsx","webpack://goit-react-hw-05-movies/./src/components/pages/styles/HomePage.module.css?6095"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import { Link, useLocation} from 'react-router-dom'\n// import { theMovieSearchAPI } from 'servises/api'\n// import css from './styles/HomePage.module.css'\n\n// const MoviesPage = () => {\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [arr, setArr] = useState([]);\n//   const location = useLocation()\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await theMovieSearchAPI(`?query=${searchQuery}`);\n//         setArr(response);\n//       } catch (error) {\n//         console.error('Ошибка при загрузке данных:', error);\n//       }\n//     };\n//     fetchData();\n//   }, [searchQuery]);\n\n//   return (\n//     <>\n//       <input\n//         type=\"text\"\n//         value={searchQuery}\n//         onChange={(e) => setSearchQuery(e.target.value)}\n//         placeholder='search movie'\n//       />\n\n//       <ul className={css.list}>\n//         {arr && arr.map(({ id, title }) => <li key={id} className={css.item}>\n//           <Link className={css.link} to={`${id}`} state={{ from: location }}>\n//             {title}\n//           </Link>\n//         </li>)}\n//       </ul>\n//     </>\n//   );\n// };\n\n// export default MoviesPage; версия без кнопки поиска\n\n\nimport React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useSearchParams } from 'react-router-dom'\nimport { theMovieSearchAPI } from 'servises/api'\nimport css from './styles/HomePage.module.css'\n// import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams('query');\n  const [searchQuery, setSearchQuery] = useState('');\n  const query = searchParams.get('query') ?? '';\n\n  const [arr, setArr] = useState([]);\n  const location = useLocation()\n\n  useEffect(() => {\n\n    const fetchData = async () => {\n      try {\n        const response = await theMovieSearchAPI(`?query=${query}`);\n        console.log(response);\n        setArr(response);\n    //     if( response.length === 0 ) toast.error('No movie for you search', {\n    //       position: \"top-right\",\n    //       autoClose: 5000,\n    //       hideProgressBar: false,\n    //       closeOnClick: true,\n    //       pauseOnHover: true,\n    //       draggable: true,\n    //       progress: undefined,\n    //       theme: \"dark\",\n    //       style: {\n    //       fontSize: '20px'\n    //   },\n    // })\n      } catch (error) {\n        console.error('Ошибка при загрузке данных:', error);\n      }\n    };\n    fetchData();\n  }, [query])\n\n  const handleSearch = () => {\n    setSearchParams({ query: searchQuery });\n\n  }\n  return (\n    <>\n      {/* <ToastContainer /> */}\n      <input\n        className={css.input}\n        type=\"text\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n        placeholder='search movie'\n      />\n      <button className={css.button_search} onClick={handleSearch}>Search</button>\n\n      <ul className={css.list}>\n        {arr.map(({ id, title }) => <li key={id} className={css.item}>\n          <Link className={css.link} to={`${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>)} \n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"HomePage_input__-92M2\",\"button_search\":\"HomePage_button_search__srqDo\",\"title\":\"HomePage_title__hLn7K\",\"list\":\"HomePage_list__fkKMs\",\"item\":\"HomePage_item__ofkHd\",\"link\":\"HomePage_link__2556n\"};"],"names":["useSearchParams","searchParams","setSearchParams","useState","searchQuery","setSearchQuery","query","get","arr","setArr","location","useLocation","useEffect","fetchData","theMovieSearchAPI","response","console","log","error","className","css","type","value","onChange","e","target","placeholder","onClick","map","id","title","to","state","from"],"sourceRoot":""}